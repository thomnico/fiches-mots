#!/usr/bin/env python3
"""
Test de debug pour la g√©n√©ration PDF en paysage
"""

import os
import time
from playwright.sync_api import sync_playwright

APP_URL = "http://localhost:3000"

def test_pdf_generation():
    """Test debug g√©n√©ration PDF paysage"""
    print("üîç Test debug - G√©n√©ration PDF paysage")

    with sync_playwright() as p:
        browser = p.chromium.launch(headless=False)
        page = browser.new_page()

        # Capturer les erreurs console
        page.on("console", lambda msg: print(f"   [{msg.type.upper()}] {msg.text}"))
        page.on("pageerror", lambda err: print(f"   [ERROR] {err}"))

        # Aller sur la page
        page.goto(APP_URL)
        page.wait_for_load_state('networkidle')

        print("\n1Ô∏è‚É£ Entrer des mots de test")
        page.locator('#words').fill('chat\nchien\noiseau')

        print("\n2Ô∏è‚É£ Cliquer sur 'Rechercher les images'")
        page.locator('#btn-search').click()

        # Attendre les sections
        print("\n3Ô∏è‚É£ Attendre les images...")
        page.wait_for_selector('.word-section', timeout=15000)
        time.sleep(3)

        sections = page.locator('.word-section').count()
        print(f"   ‚úÖ {sections} sections cr√©√©es")

        # S√©lectionner les premi√®res images
        print("\n4Ô∏è‚É£ S√©lectionner les images...")
        for i in range(min(sections, 3)):
            images = page.locator(f'.word-section').nth(i).locator('.image-option')
            if images.count() > 0:
                images.first.click()
                time.sleep(0.5)

        print("\n5Ô∏è‚É£ Cliquer sur 'G√©n√©rer le PDF'")
        page.locator('#btn-generate').click()

        # Attendre la g√©n√©ration
        print("\n6Ô∏è‚É£ G√©n√©ration en cours...")
        time.sleep(5)

        print("\n7Ô∏è‚É£ V√©rifier s'il y a des erreurs...")

        # Screenshot
        os.makedirs("web/screenshots/debug", exist_ok=True)
        page.screenshot(path="web/screenshots/debug/pdf-generation.png")
        print("\nüì∏ Screenshot: web/screenshots/debug/pdf-generation.png")

        input("\n‚è∏Ô∏è  Appuyez sur Entr√©e pour fermer...")
        browser.close()

if __name__ == "__main__":
    test_pdf_generation()
